services:
  app:
    build: .
    container_name: escrow-agent-app
    ports:
      - "8080:8080"
    depends_on:
      - db
      # - minio
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_REGION=${MINIO_REGION}
    networks:
      - escrow-network

  db:
    image: postgres:13
    container_name: escrow-agent-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - escrow-network

  # frontend:
  #   build:
  #     context: ./frontend
  #   container_name: escrow-agent-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NEXT_PUBLIC_API_BASE_URL=http://localhost:8080/api
  #     - NEXT_PUBLIC_BASE_URL=http://localhost:8080
  #   networks:
  #     - escrow-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - escrow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3


  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "8081:8080"
    environment:
      - SWAGGER_JSON=/swagger/swagger.yml
    volumes:
      - ./swagger:/swagger 
    networks:
      - escrow-network

volumes:
  postgres_data:
  minio_data:

networks:
  escrow-network:
